{"{\"assumptions\":{},\"sourceRoot\":\"/Users/lisen/Documents/Technigo/Final Project/final-project/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lisen/Documents/Technigo/Final Project/final-project/backend\",\"filename\":\"/Users/lisen/Documents/Technigo/Final Project/final-project/backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lisen/Documents/Technigo/Final Project/final-project/backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/final-project';\n\n_mongoose[\"default\"].connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose[\"default\"].Promise = Promise; // Defines the port the app will run on. Defaults to 8080, but can be overridden\n// when starting the server. Example command to overwrite PORT env variable value:\n// PORT=9000 npm start\n\nvar port = process.env.PORT || 8080;\nvar app = (0, _express[\"default\"])(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\nvar UserSchema = new _mongoose[\"default\"].Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    \"default\": function _default() {\n      return _crypto[\"default\"].randomBytes(128).toString('hex');\n    }\n  }\n});\n\nvar User = _mongoose[\"default\"].model('User', UserSchema);\n\napp.post('/register', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, username, password, salt, newUser;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, username = _req$body.username, password = _req$body.password;\n            _context.prev = 1;\n            salt = _bcrypt[\"default\"].genSaltSync();\n\n            if (!(password.length < 8)) {\n              _context.next = 7;\n              break;\n            }\n\n            res.status(400).json({\n              response: 'Your password must be at least 8 characters long.',\n              success: false\n            });\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return new User({\n              username: username,\n              password: _bcrypt[\"default\"].hashSync(password, salt)\n            }).save();\n\n          case 9:\n            newUser = _context.sent;\n            res.status(201).json({\n              response: {\n                username: newUser.username,\n                accessToken: newUser.accessToken,\n                userId: newUser._id\n              },\n              success: true\n            });\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(400).json({\n              response: 'Already registered',\n              success: false\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/login', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, username, password, user;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, username = _req$body2.username, password = _req$body2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return User.findOne({\n              username: username\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (user && _bcrypt[\"default\"].compareSync(password, user.password)) {\n              res.status(200).json({\n                success: true,\n                username: user.username,\n                accessToken: user.accessToken,\n                userId: user._id\n              });\n            } else {\n              res.status(400).json({\n                response: 'Your username or password was incorrect, please check that you have the right login credentials!',\n                success: false\n              });\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(400).json({\n              response: _context2.t0,\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n    var accessToken, user;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            accessToken = req.header('Authorization');\n            _context3.prev = 1;\n            _context3.next = 4;\n            return User.findOne({\n              accessToken: accessToken\n            });\n\n          case 4:\n            user = _context3.sent;\n\n            if (user) {\n              next();\n            } else {\n              res.status(401).json({\n                response: 'please log in',\n                success: false\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400).json({\n              response: _context3.t0,\n              success: false\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function authenticateUser(_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Start defining your routes here\n\n\napp.get('/', function (req, res) {\n  res.send('Hello Technigo!');\n}); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"sources":["server.js"],"names":["mongoUrl","process","env","MONGO_URL","mongoose","connect","useNewUrlParser","useUnifiedTopology","Promise","port","PORT","app","use","express","json","UserSchema","Schema","username","type","String","required","unique","password","accessToken","crypto","randomBytes","toString","User","model","post","req","res","body","salt","bcrypt","genSaltSync","length","status","response","success","hashSync","save","newUser","userId","_id","findOne","user","compareSync","authenticateUser","next","header","get","send","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,mCAA1C;;AACAC,qBAASC,OAAT,CAAiBL,QAAjB,EAA2B;AAAEM,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA3B;;AACAH,qBAASI,OAAT,GAAmBA,OAAnB,C,CAEA;AACA;AACA;;AACA,IAAMC,IAAI,GAAGR,OAAO,CAACC,GAAR,CAAYQ,IAAZ,IAAoB,IAAjC;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEA,IAAMC,UAAU,GAAG,IAAIX,qBAASY,MAAb,CAAoB;AACtCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAD4B;AAMtCC,EAAAA,QAAQ,EAAE;AACTJ,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAN4B;AAUtCG,EAAAA,WAAW,EAAE;AACZL,IAAAA,IAAI,EAAEC,MADM;AAEZ,eAAS;AAAA,aAAMK,mBAAOC,WAAP,CAAmB,GAAnB,EAAwBC,QAAxB,CAAiC,KAAjC,CAAN;AAAA;AAFG;AAVyB,CAApB,CAAnB;;AAgBA,IAAMC,IAAI,GAAGvB,qBAASwB,KAAT,CAAe,MAAf,EAAuBb,UAAvB,CAAb;;AAEAJ,GAAG,CAACkB,IAAJ,CAAS,WAAT;AAAA,qEAAsB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACUD,GAAG,CAACE,IADd,EACbf,QADa,aACbA,QADa,EACHK,QADG,aACHA,QADG;AAAA;AAGdW,YAAAA,IAHc,GAGPC,mBAAOC,WAAP,EAHO;;AAAA,kBAKhBb,QAAQ,CAACc,MAAT,GAAkB,CALF;AAAA;AAAA;AAAA;;AAMnBL,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,cAAAA,QAAQ,EAAE,mDADU;AAEpBC,cAAAA,OAAO,EAAE;AAFW,aAArB;AANmB;AAAA;;AAAA;AAAA;AAAA,mBAWG,IAAIZ,IAAJ,CAAS;AAC9BV,cAAAA,QAAQ,EAAEA,QADoB;AAE9BK,cAAAA,QAAQ,EAAEY,mBAAOM,QAAP,CAAgBlB,QAAhB,EAA0BW,IAA1B;AAFoB,aAAT,EAGnBQ,IAHmB,EAXH;;AAAA;AAWbC,YAAAA,OAXa;AAenBX,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,cAAAA,QAAQ,EAAE;AACTrB,gBAAAA,QAAQ,EAAEyB,OAAO,CAACzB,QADT;AAETM,gBAAAA,WAAW,EAAEmB,OAAO,CAACnB,WAFZ;AAGToB,gBAAAA,MAAM,EAAED,OAAO,CAACE;AAHP,eADU;AAMpBL,cAAAA,OAAO,EAAE;AANW,aAArB;;AAfmB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBpBR,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,cAAAA,QAAQ,EAAE,oBADU;AAEpBC,cAAAA,OAAO,EAAE;AAFW,aAArB;;AAzBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAgCA5B,GAAG,CAACkB,IAAJ,CAAS,QAAT;AAAA,sEAAmB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACaD,GAAG,CAACE,IADjB,EACVf,QADU,cACVA,QADU,EACAK,QADA,cACAA,QADA;AAAA;AAAA;AAAA,mBAIEK,IAAI,CAACkB,OAAL,CAAa;AAAE5B,cAAAA,QAAQ,EAARA;AAAF,aAAb,CAJF;;AAAA;AAIX6B,YAAAA,IAJW;;AAMjB,gBAAIA,IAAI,IAAIZ,mBAAOa,WAAP,CAAmBzB,QAAnB,EAA6BwB,IAAI,CAACxB,QAAlC,CAAZ,EAAyD;AACxDS,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpByB,gBAAAA,OAAO,EAAE,IADW;AAEpBtB,gBAAAA,QAAQ,EAAE6B,IAAI,CAAC7B,QAFK;AAGpBM,gBAAAA,WAAW,EAAEuB,IAAI,CAACvB,WAHE;AAIpBoB,gBAAAA,MAAM,EAAEG,IAAI,CAACF;AAJO,eAArB;AAMA,aAPD,MAOO;AACNb,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,gBAAAA,QAAQ,EACP,kGAFmB;AAGpBC,gBAAAA,OAAO,EAAE;AAHW,eAArB;AAKA;;AAnBgB;AAAA;;AAAA;AAAA;AAAA;AAqBjBR,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,cAAAA,QAAQ,cADY;AAEpBC,cAAAA,OAAO,EAAE;AAFW,aAArB;;AArBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AA4BA,IAAMS,gBAAgB;AAAA,sEAAG,kBAAOlB,GAAP,EAAYC,GAAZ,EAAiBkB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB1B,YAAAA,WADkB,GACJO,GAAG,CAACoB,MAAJ,CAAW,eAAX,CADI;AAAA;AAAA;AAAA,mBAGJvB,IAAI,CAACkB,OAAL,CAAa;AAAEtB,cAAAA,WAAW,EAAEA;AAAf,aAAb,CAHI;;AAAA;AAGjBuB,YAAAA,IAHiB;;AAIvB,gBAAIA,IAAJ,EAAU;AACTG,cAAAA,IAAI;AACJ,aAFD,MAEO;AACNlB,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,gBAAAA,QAAQ,EAAE,eADU;AAEpBC,gBAAAA,OAAO,EAAE;AAFW,eAArB;AAIA;;AAXsB;AAAA;;AAAA;AAAA;AAAA;AAavBR,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACpBwB,cAAAA,QAAQ,cADY;AAEpBC,cAAAA,OAAO,EAAE;AAFW,aAArB;;AAbuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBS,gBAAgB;AAAA;AAAA;AAAA,GAAtB,C,CAoBA;;;AACArC,GAAG,CAACwC,GAAJ,CAAQ,GAAR,EAAa,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACqB,IAAJ,CAAS,iBAAT;AACA,CAFD,E,CAIA;;AACAzC,GAAG,CAAC0C,MAAJ,CAAW5C,IAAX,EAAiB,YAAM;AACtB6C,EAAAA,OAAO,CAACC,GAAR,8CAAkD9C,IAAlD;AACA,CAFD","sourceRoot":"/Users/lisen/Documents/Technigo/Final Project/final-project/backend/","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport mongoose from 'mongoose';\nimport crypto from 'crypto';\nimport bcrypt from 'bcrypt';\n\nconst mongoUrl = process.env.MONGO_URL || 'mongodb://localhost/final-project';\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true });\nmongoose.Promise = Promise;\n\n// Defines the port the app will run on. Defaults to 8080, but can be overridden\n// when starting the server. Example command to overwrite PORT env variable value:\n// PORT=9000 npm start\nconst port = process.env.PORT || 8080;\nconst app = express();\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors());\napp.use(express.json());\n\nconst UserSchema = new mongoose.Schema({\n\tusername: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tunique: true,\n\t},\n\tpassword: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\taccessToken: {\n\t\ttype: String,\n\t\tdefault: () => crypto.randomBytes(128).toString('hex'),\n\t},\n});\n\nconst User = mongoose.model('User', UserSchema);\n\napp.post('/register', async (req, res) => {\n\tconst { username, password } = req.body;\n\ttry {\n\t\tconst salt = bcrypt.genSaltSync();\n\n\t\tif (password.length < 8) {\n\t\t\tres.status(400).json({\n\t\t\t\tresponse: 'Your password must be at least 8 characters long.',\n\t\t\t\tsuccess: false,\n\t\t\t});\n\t\t} else {\n\t\t\tconst newUser = await new User({\n\t\t\t\tusername: username,\n\t\t\t\tpassword: bcrypt.hashSync(password, salt),\n\t\t\t}).save();\n\t\t\tres.status(201).json({\n\t\t\t\tresponse: {\n\t\t\t\t\tusername: newUser.username,\n\t\t\t\t\taccessToken: newUser.accessToken,\n\t\t\t\t\tuserId: newUser._id,\n\t\t\t\t},\n\t\t\t\tsuccess: true,\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tres.status(400).json({\n\t\t\tresponse: 'Already registered',\n\t\t\tsuccess: false,\n\t\t});\n\t}\n});\n\napp.post('/login', async (req, res) => {\n\tconst { username, password } = req.body;\n\n\ttry {\n\t\tconst user = await User.findOne({ username });\n\n\t\tif (user && bcrypt.compareSync(password, user.password)) {\n\t\t\tres.status(200).json({\n\t\t\t\tsuccess: true,\n\t\t\t\tusername: user.username,\n\t\t\t\taccessToken: user.accessToken,\n\t\t\t\tuserId: user._id,\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(400).json({\n\t\t\t\tresponse:\n\t\t\t\t\t'Your username or password was incorrect, please check that you have the right login credentials!',\n\t\t\t\tsuccess: false,\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tres.status(400).json({\n\t\t\tresponse: error,\n\t\t\tsuccess: false,\n\t\t});\n\t}\n});\n\nconst authenticateUser = async (req, res, next) => {\n\tconst accessToken = req.header('Authorization');\n\ttry {\n\t\tconst user = await User.findOne({ accessToken: accessToken });\n\t\tif (user) {\n\t\t\tnext();\n\t\t} else {\n\t\t\tres.status(401).json({\n\t\t\t\tresponse: 'please log in',\n\t\t\t\tsuccess: false,\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tres.status(400).json({\n\t\t\tresponse: error,\n\t\t\tsuccess: false,\n\t\t});\n\t}\n};\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n\tres.send('Hello Technigo!');\n});\n\n// Start the server\napp.listen(port, () => {\n\tconsole.log(`Server running on http://localhost:${port}`);\n});\n"]}},"mtime":1654176575977}}